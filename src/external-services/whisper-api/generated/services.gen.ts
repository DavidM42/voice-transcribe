// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { AsrAsrPostData, AsrAsrPostResponse, DetectLanguageDetectLanguagePostData, DetectLanguageDetectLanguagePostResponse } from './types.gen';

export class EndpointsService {
    /**
     * Asr
     * @param data The data for the request.
     * @param data.formData
     * @param data.encode Encode audio first through ffmpeg
     * @param data.task
     * @param data.language
     * @param data.initialPrompt
     * @param data.vadFilter Enable the voice activity detection (VAD) to filter out parts of the audio without speech
     * @param data.wordTimestamps Word level timestamps
     * @param data.output
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static asrAsrPost(data: AsrAsrPostData): CancelablePromise<AsrAsrPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/asr',
            query: {
                encode: data.encode,
                task: data.task,
                language: data.language,
                initial_prompt: data.initialPrompt,
                vad_filter: data.vadFilter,
                word_timestamps: data.wordTimestamps,
                output: data.output
            },
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Detect Language
     * @param data The data for the request.
     * @param data.formData
     * @param data.encode Encode audio first through FFmpeg
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static detectLanguageDetectLanguagePost(data: DetectLanguageDetectLanguagePostData): CancelablePromise<DetectLanguageDetectLanguagePostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/detect-language',
            query: {
                encode: data.encode
            },
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}