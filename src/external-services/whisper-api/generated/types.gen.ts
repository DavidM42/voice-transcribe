// This file is auto-generated by @hey-api/openapi-ts

export type Body_asr_asr_post = {
    audio_file: (Blob | File);
};

export type Body_detect_language_detect_language_post = {
    audio_file: (Blob | File);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type AsrAsrPostData = {
    /**
     * Encode audio first through ffmpeg
     */
    encode?: boolean;
    formData: Body_asr_asr_post;
    initialPrompt?: string;
    language?: 'af' | 'am' | 'ar' | 'as' | 'az' | 'ba' | 'be' | 'bg' | 'bn' | 'bo' | 'br' | 'bs' | 'ca' | 'cs' | 'cy' | 'da' | 'de' | 'el' | 'en' | 'es' | 'et' | 'eu' | 'fa' | 'fi' | 'fo' | 'fr' | 'gl' | 'gu' | 'ha' | 'haw' | 'he' | 'hi' | 'hr' | 'ht' | 'hu' | 'hy' | 'id' | 'is' | 'it' | 'ja' | 'jw' | 'ka' | 'kk' | 'km' | 'kn' | 'ko' | 'la' | 'lb' | 'ln' | 'lo' | 'lt' | 'lv' | 'mg' | 'mi' | 'mk' | 'ml' | 'mn' | 'mr' | 'ms' | 'mt' | 'my' | 'ne' | 'nl' | 'nn' | 'no' | 'oc' | 'pa' | 'pl' | 'ps' | 'pt' | 'ro' | 'ru' | 'sa' | 'sd' | 'si' | 'sk' | 'sl' | 'sn' | 'so' | 'sq' | 'sr' | 'su' | 'sv' | 'sw' | 'ta' | 'te' | 'tg' | 'th' | 'tk' | 'tl' | 'tr' | 'tt' | 'uk' | 'ur' | 'uz' | 'vi' | 'yi' | 'yo' | 'yue' | 'zh';
    output?: 'txt' | 'vtt' | 'srt' | 'tsv' | 'json';
    task?: 'transcribe' | 'translate';
    /**
     * Enable the voice activity detection (VAD) to filter out parts of the audio without speech
     */
    vadFilter?: boolean;
    /**
     * Word level timestamps
     */
    wordTimestamps?: boolean;
};

export type AsrAsrPostResponse = unknown;

export type DetectLanguageDetectLanguagePostData = {
    /**
     * Encode audio first through FFmpeg
     */
    encode?: boolean;
    formData: Body_detect_language_detect_language_post;
};

export type DetectLanguageDetectLanguagePostResponse = unknown;

export type $OpenApiTs = {
    '/asr': {
        post: {
            req: {
                /**
                 * Encode audio first through ffmpeg
                 */
                encode?: boolean;
                formData: Body_asr_asr_post;
                initialPrompt?: string;
                language?: 'af' | 'am' | 'ar' | 'as' | 'az' | 'ba' | 'be' | 'bg' | 'bn' | 'bo' | 'br' | 'bs' | 'ca' | 'cs' | 'cy' | 'da' | 'de' | 'el' | 'en' | 'es' | 'et' | 'eu' | 'fa' | 'fi' | 'fo' | 'fr' | 'gl' | 'gu' | 'ha' | 'haw' | 'he' | 'hi' | 'hr' | 'ht' | 'hu' | 'hy' | 'id' | 'is' | 'it' | 'ja' | 'jw' | 'ka' | 'kk' | 'km' | 'kn' | 'ko' | 'la' | 'lb' | 'ln' | 'lo' | 'lt' | 'lv' | 'mg' | 'mi' | 'mk' | 'ml' | 'mn' | 'mr' | 'ms' | 'mt' | 'my' | 'ne' | 'nl' | 'nn' | 'no' | 'oc' | 'pa' | 'pl' | 'ps' | 'pt' | 'ro' | 'ru' | 'sa' | 'sd' | 'si' | 'sk' | 'sl' | 'sn' | 'so' | 'sq' | 'sr' | 'su' | 'sv' | 'sw' | 'ta' | 'te' | 'tg' | 'th' | 'tk' | 'tl' | 'tr' | 'tt' | 'uk' | 'ur' | 'uz' | 'vi' | 'yi' | 'yo' | 'yue' | 'zh';
                output?: 'txt' | 'vtt' | 'srt' | 'tsv' | 'json';
                task?: 'transcribe' | 'translate';
                /**
                 * Enable the voice activity detection (VAD) to filter out parts of the audio without speech
                 */
                vadFilter?: boolean;
                /**
                 * Word level timestamps
                 */
                wordTimestamps?: boolean;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: unknown;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/detect-language': {
        post: {
            req: {
                /**
                 * Encode audio first through FFmpeg
                 */
                encode?: boolean;
                formData: Body_detect_language_detect_language_post;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: unknown;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
};